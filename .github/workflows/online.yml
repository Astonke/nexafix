name: CI with Persistent Ngrok
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Install dependencies if needed
      - name: Set up Python environment and install dependencies
        run: |
          source venv/bin/activate
          pip install -r req.txt

      # Start Django server in the background
      - name: Start Django server
        run: |
          source venv/bin/activate
          cd mysite
          nohup python3 manage.py runserver 0.0.0.0:8000 &

      # Download and configure Ngrok
      - name: Set up Ngrok
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list >/dev/null
          sudo apt update && sudo apt install ngrok

      # Authenticate Ngrok with your auth token
      - name: Authenticate Ngrok
        run: ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

      # Start Ngrok to expose port 8000
      - name: Start Ngrok
        run: |
          nohup ngrok http --domain drum-clear-hawk.ngrok-free.app 8000 &

      # Wait a bit to let Ngrok start and print the public URL
      - name: Get Ngrok URL
        run: |
          sleep 5
          curl --silent --show-error http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url'

      # Keep the job running to maintain the Ngrok tunnel
      - name: Keep Ngrok tunnel open
        run: |
          while true; do
            random_num=$((RANDOM))
            echo "Random number: $random_num"
            sleep 3
          done

